#!/run/current-system/sw/bin/fish

# set KEY (secret-tool lookup name 'key for vu1')
# set KEY (cat /home/scott/.local/shjare/vu1)
# set KEY (cat /run/agenix/vu1)
set KEY (cat /tmp/vuserver.key | sed 's/KEY=\(.*\)/\1/g')

# https://stackoverflow.com/questions/12771909/bash-using-trap-ctrlc
stty -echoctl # hide ^C
trap "cleanup; exit" INT TERM

function cleanup
    send cpu set "value=0"
    send gpu set "value=0"
    send mem set "value=0"
    send disk set "value=0"
    send cpu backlight "red=0&green=0&blue=0"
    send gpu backlight "red=0&green=0&blue=0"
    send mem backlight "red=0&green=0&blue=0"
    send disk backlight "red=0&green=0&blue=0"
end

# https://docs.vudials.com/api/dial_UID_set/
function send
    set dial $argv[1]
    set action $argv[2]
    set params $argv[3..]
    set request "/$action?$params"

    switch $dial
        case cpu
            set dialuid 6A002D000650564139323920
        case gpu
            set dialuid 860043000650564139323920
        case mem
            set dialuid 60003D000650564139323920
        case disk
            set dialuid 6B002A000650564139323920
        case '*'
            echo invalid dial name
            exit 1
    end

    set output (wget -qO- "http://localhost:5340/api/v0/dial/$dialuid/$action?$params&key=$KEY" | jq ". |= . + {\"date\": \"$(date)\", \"dial\": \"$dial\", \"request\": \"$request\"}")
    # sleep 0.1

end

while true

    # set cpuidle (vmstat 1 2|tail -1|awk '{print $15}')
    # set cpuused (math "100 - $cpuidle")
    set cpuused (math -s0 (cat /proc/pressure/cpu | grep some | sed 's/.*avg10=\([0-9]*\.[0-9]*\).*/\1/g'))

    send cpu set "value=$cpuused"

    # if test "$cpuused" -gt 100
    if test "$cpuused" -gt 80
        send cpu backlight "red=100&green=0&blue=0"
        set cpucolor red
        # else if test "$cpuused" -gt 50
    else if test "$cpuused" -gt 50
        send cpu backlight "red=0&green=0&blue=100"
        set cpucolor blue
    else
        send cpu backlight "red=0&green=1&blue=0"
        set cpucolor green
    end

    set gpuused (math -s0 (radeontop -d- -l1 | tail -1 | awk '{print $5}' | tr -d '%,'))

    send gpu set "value=$gpuused"

    if test "$gpuused" -gt 75
        send gpu backlight "red=100&green=0&blue=0"
        set gpucolor red
    else if test "$gpuused" -gt 30
        send gpu backlight "red=0&green=0&blue=100"
        set gpucolor blue
    else
        send gpu backlight "red=0&green=1&blue=0"
        set gpucolor green
    end

    # set memused (math -s0 (vmstat -s | awk  ' $0 ~ /total memory/ {total=$1 } $0 ~/free memory/ {free=$1} $0 ~/buffer memory/ {buffer=$1} $0 ~/cache/ {cache=$1} END{print (total-free-buffer-cache)/total*100}'))

    set memused (math -s0 "$(cat /proc/pressure/memory | grep some | sed 's/.*avg10=\([0-9]*\.[0-9]*\).*/\1/g') * 5")

    send mem set "value=$memused"

    # if test "$memused" -gt 85
    if test "$memused" -gt 50
        send mem backlight "red=100&green=0&blue=0"
        set memcolor red
        # else if test "$memused" -gt 60
    else if test "$memused" -gt 25
        send mem backlight "red=0&green=0&blue=100"
        set memcolor blue
    else
        send mem backlight "red=0&green=1&blue=0"
        set memcolor green
    end

    set diskused (df -h | grep "/\$" | awk '{print $5}' | sed 's/\(\d*\)%/\1/g')

    send disk set "value=$diskused"

    if test "$diskused" -gt 50
        send disk backlight "red=100&green=0&blue=0"
        set diskcolor red
    else if test "$diskused" -gt 25
        send disk backlight "red=0&green=0&blue=100"
        set diskcolor blue
    else
        send disk backlight "red=0&green=1&blue=0"
        set diskcolor green
    end

    set cpuused (string pad --width 3 $cpuused)
    set gpuused (string pad --width 3 $gpuused)
    set memused (string pad --width 3 $memused)
    set diskused (string pad --width 3 $diskused)
    set_color --bold 888
    echo -n $(date "+%F %T ")
    set_color normal
    echo -n cpu
    set_color $cpucolor
    echo -n " $cpuused% "
    set_color normal
    echo -n gpu
    set_color $gpucolor
    echo -n " $gpuused% "
    set_color normal
    echo -n mem
    set_color $memcolor
    echo -n " $memused% "
    set_color normal
    echo -n dsk
    set_color $diskcolor
    echo -n " $diskused% "
    set_color normal
    echo ""

end
