#!/run/current-system/sw/bin/nix-shell
#! nix-shell -i fish
#! nix-shell -p fish wget radeontop

# https://stackoverflow.com/questions/12771909/bash-using-trap-ctrlc
stty -echoctl # hide ^C
trap "cleanup; exit" INT TERM

set dials cpu gpu mem dsk

set off "red=0&green=0&blue=0"
set ok "red=0&green=1&blue=0"
set warn "red=0&green=0&blue=100"
set alert "red=100&green=0&blue=0"

function cleanup
    for d in $dials
        send $d set "value=0"
        send $d backlight $off
    end
end

# https://docs.vudials.com/api/dial_UID_set/
function send
    set dial $argv[1]
    set action $argv[2]
    set params $argv[3..]
    set request "/$action?$params"

    switch $dial
        case cpu
            set dialuid $CPUDIAL
        case gpu
            set dialuid $GPUDIAL
        case mem
            set dialuid $MEMDIAL
        case dsk
            set dialuid $DSKDIAL
        case '*'
            echo invalid dial name
            exit 1
    end

    if test -n $dialuid
        set output (wget -qO- "http://localhost:5340/api/v0/dial/$dialuid/$action?$params&key=$KEY" | jq ". |= . + {\"date\": \"$(date)\", \"dial\": \"$dial\", \"request\": \"$request\"}")
    end

end

while true

    if test -e /run/vuserver/key
        set KEY (cat /run/vuserver/key) 
    else
        echo "error: the API key is not available so the server won't be updated"
    end

    if test -e /proc/pressure/cpu
        set cpuused (math -s0 (cat /proc/pressure/cpu | grep some | sed 's/.*avg10=\([0-9]*\.[0-9]*\).*/\1/g'))
    else
        set cpuidle (vmstat 1 2|tail -1|awk '{print $15}')
        set cpuused (math "100 - $cpuidle")
    end

    send cpu set "value=$cpuused"

    if test "$cpuused" -gt 80
        send cpu backlight $alert
        set cpucolor red
    else if test "$cpuused" -ge 50
        send cpu backlight $warn
        set cpucolor blue
    else
        send cpu backlight $ok
        set cpucolor green
    end

    set gpuused (math -s0 (radeontop -d- -l1 | tail -1 | awk '{print $5}' | tr -d '%,'))

    send gpu set "value=$gpuused"

    if test "$gpuused" -ge 75
        send gpu backlight $alert
        set gpucolor red
    else if test "$gpuused" -gt 30
        send gpu backlight $warn
        set gpucolor blue
    else
        send gpu backlight $ok
        set gpucolor green
    end


    if test -e /proc/pressure/cpu
        set memused (math -s0 "$(cat /proc/pressure/memory | grep some | sed 's/.*avg10=\([0-9]*\.[0-9]*\).*/\1/g') * 5")
    else
        set memused (math -s0 (vmstat -s | awk  ' $0 ~ /total memory/ {total=$1 } $0 ~/free memory/ {free=$1} $0 ~/buffer memory/ {buffer=$1} $0 ~/cache/ {cache=$1} END{print (total-free-buffer-cache)/total*100}'))
    end
    send mem set "value=$memused"

    if test "$memused" -ge 50
        send mem backlight $alert
        set memcolor red
        # else if test "$memused" -gt 60
    else if test "$memused" -ge 25
        send mem backlight $warn
        set memcolor blue
    else
        send mem backlight $ok
        set memcolor green
    end

    set dskused (df -h | grep "/\$" | awk '{print $5}' | sed 's/\(\d*\)%/\1/g')

    send dsk set "value=$dskused"

    if test "$dskused" -ge 75
        send dsk backlight $alert
        set dskcolor red
    else if test "$dskused" -ge 50
        send dsk backlight $warn
        set dskcolor blue
    else
        send dsk backlight $ok
        set dskcolor green
    end

    set cpuused (string pad --width 3 $cpuused)
    set gpuused (string pad --width 3 $gpuused)
    set memused (string pad --width 3 $memused)
    set dskused (string pad --width 3 $dskused)
    set_color --bold 888
    echo -n $(date "+%F %T ")
    set_color normal
    echo -n cpu
    set_color $cpucolor
    echo -n " $cpuused% "
    set_color normal
    echo -n gpu
    set_color $gpucolor
    echo -n " $gpuused% "
    set_color normal
    echo -n mem
    set_color $memcolor
    echo -n " $memused% "
    set_color normal
    echo -n dsk
    set_color $dskcolor
    echo -n " $dskused% "
    set_color normal
    echo ""

end
